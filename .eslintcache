[{"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\index.js":"1","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\App.js":"2","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Header.js":"3","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Weatherbis.js":"4","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Result.js":"5","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Search.js":"6","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\CardContainer.js":"7","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Filter.js":"8","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Picker.js":"9","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Weather.js":"10"},{"size":230,"mtime":1613123169816,"results":"11","hashOfConfig":"12"},{"size":734,"mtime":1614165988638,"results":"13","hashOfConfig":"12"},{"size":311,"mtime":1613123169813,"results":"14","hashOfConfig":"12"},{"size":2773,"mtime":1614166138877,"results":"15","hashOfConfig":"12"},{"size":3791,"mtime":1614157399810,"results":"16","hashOfConfig":"12"},{"size":3668,"mtime":1614165891839,"results":"17","hashOfConfig":"12"},{"size":873,"mtime":1614157399808,"results":"18","hashOfConfig":"12"},{"size":1486,"mtime":1614157399809,"results":"19","hashOfConfig":"12"},{"size":401,"mtime":1614157399810,"results":"20","hashOfConfig":"12"},{"size":2058,"mtime":1614161770421,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"6hpnks",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\index.js",[],["48","49"],"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\App.js",["50","51","52"],"import { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Result from \"./components/Result\";\r\nimport Weather from \"./components/Weather\";\r\nimport Weatherbis from \"./components/Weatherbis\";\r\nimport Search from \"./components/Search\";\r\n\r\n// eslint-disable-next-line no-undef\r\nconst App = () => {\r\n  const [city, setCity] = useState(\"\");\r\n  const [rain, setRain] = useState(false);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n     <Search passCity={setCity} />\r\n     {/* <Weather passCity={setCity} passRain={setRain} />\r\n       <Weatherbis passCity={setCity} passRain={setRain} /> */}\r\n      <Result city={city} rain={rain} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Header.js",[],"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Weatherbis.js",["53"],"import React, {useState, useEffect} from \"react\";\r\nimport Search from './Search'\r\n\r\nconst apiKey = '3ab8eebb78097ae35ae801f42442c34d'\r\n\r\nconst Weatherbis = (props) => {\r\n    const [query, setQuery] = useState('')\r\n    const [meteo, setMeteo] = useState([])\r\n    const [dropdown, setDropdown] = useState(\"Tomorrow\")\r\n    const [day, setDay]= useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    const [meteoT, setMeteoT] = useState(null);\r\n\r\n\r\n    const search = evt => {\r\n        if (evt.key === 'Enter')\r\n        fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${query}&appid=${apiKey}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n\r\n            setMeteo(result.list)\r\n        })\r\n        .then(res=>{\r\n\r\n            console.log(meteo)\r\n            setQuery('');\r\n            this.props.passCity(res.city.name);\r\n            \r\n        })\r\n        }\r\n\r\n            useEffect(() => {setMeteoT(meteo\r\n                .find(meteoInTime=> (meteoInTime.dt_txt.includes('12:00:00'))\r\n               && dtToDate(meteoInTime.dt).includes(day))); setLoading(true);console.log('meteo load')}, [meteo, day]);\r\n\r\n    let today = new Date()\r\n\r\n    let tomorrow = new Date()\r\n    tomorrow.setDate(today.getDate() + 1)\r\n    \r\n\r\n    let dayTwo =  new Date()\r\n    dayTwo.setDate(today.getDate() + 2)\r\n\r\n    let dayThree =  new Date()\r\n    dayThree.setDate(today.getDate() + 3)\r\n\r\n    let dayFour =  new Date()\r\n    dayFour.setDate(today.getDate() + 4)\r\n\r\n    const localString = (date) =>{\r\n    //    setDay(date.toLocaleDateString())\r\n        return (date.toLocaleDateString())\r\n    }\r\n\r\nconst dtToDate = (dt)=>{\r\nreturn new Date(dt*1000).toLocaleString()\r\n}\r\n\r\n    return (\r\n     <div>\r\n        {meteoT? <Search />: null}\r\n        <div>\r\n           \r\n            <input\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}>\r\n            </input>\r\n            <div>\r\n         <select value={dropdown} onChange={(e)=>{setDropdown(console.log(e.target.value)); setDay(e.target.value)}}>\r\n        <option value={localString(tomorrow)} >Tomorrow</option>\r\n        <option value={localString(dayTwo)} >dans 2 jours</option>\r\n        <option value={localString(dayThree)}>dans 3 jours</option>\r\n        <option value={localString(dayFour)}>dans 4 jours</option>\r\n        </select>\r\n         </div>\r\n        </div>\r\n        {\r\n        (meteoT) ? \r\n        (\r\n        <div>\r\n            <img\r\n        src={`http://openweathermap.org/img/wn/${meteoT.weather[0].icon}.png`}\r\n        className={meteoT.weather[0].icon}\r\n        id=\"iconMeteo\"\r\n        alt={meteoT.weather[0].description}/>\r\n        </div>) \r\n       : ('')\r\n        }\r\n   </div>\r\n        \r\n    )\r\n}\r\nexport default Weatherbis;\r\n","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Result.js",[],"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Search.js",["54","55","56","57"],"import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\nimport Img from \"../Image/setting.png\";\r\nimport Image from \"../Image/search.png\";\r\nimport Filter from \"./Filter\";\r\nimport Picker from \"./Picker\";\r\nimport Weatherbis from \"./Weatherbis\"\r\nimport Weather from \"./Weather\"\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      cityName: \"\",\r\n      show: false,\r\n      showwhen: false,\r\n    };\r\n    this.getLocation = this.getLocation.bind(this);\r\n    this.getCoordinates = this.getCoordinates.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getLocation();\r\n  }\r\n\r\n  getLocation() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(this.getCoordinates);\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser\");\r\n    }\r\n  }\r\n  getCoordinates(position) {\r\n    console.log(position.coords.latitude, position.coords.longitude);\r\n    this.setState({\r\n      latitude: position.coords.latitude,\r\n      longitude: position.coords.longitude,\r\n    });\r\n    const apiKey = \"9d986c82c3977e89a2551fa521df3cb1\";\r\n    const city = fetch(\r\n      `http://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude}&lon=${position.coords.longitude}&appid=${apiKey}`,\r\n    )\r\n      .then((res) => res.json())\r\n      .then((res) => this.setState({ cityName: res.name }));\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ cityName: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"searchFunction\">\r\n        <p className=\"discoverActivity\">Discover Your Activity</p>\r\n        <p className=\"descriptionDiscover\">\r\n          Even if the weather is bad, there is an activity for you!\r\n        </p>\r\n\r\n        <div>{this.props.error ? error() : null}</div>\r\n        <form className=\"formInput\" onSubmit={this.props.loadweather}>\r\n          <div className=\"inputSearchBar\">\r\n            <div className=\"locationSearchBar\">\r\n              <input\r\n                id=\"city\"\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                value={this.state.cityName}\r\n                onChange={this.handleChange}\r\n              ></input>\r\n            </div>\r\n\r\n            <div className=\"when\">\r\n              {\" \"}\r\n              <span className=\"letsGo\">LET'S GO!</span>\r\n              <p>Now</p>\r\n              <input id=\"now\" type=\"checkbox\" />\r\n              <p>Later</p>\r\n              <input\r\n                id=\"later\"\r\n                type=\"checkbox\"\r\n                onChange={() =>\r\n                  this.setState({ showwhen: !this.state.showwhen })\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div id=\"filterDescription\">\r\n              <p id=\"textFilter\"> Categories</p>\r\n              <img\r\n                src={Img}\r\n                alt=\"setting\"\r\n                id=\"setting\"\r\n                onClick={() => this.setState({ show: !this.state.show })}\r\n              ></img>\r\n            </div>\r\n          </div>\r\n          {this.state.showwhen ? \r\n          <Weatherbis passCity={this.props.passCity} />\r\n          : <Weather passCity={this.props.passCity} />}\r\n          {this.state.show ? <Filter /> : null}\r\n          <button type=\"submit\" id=\"send\">\r\n            {\" \"}\r\n            Search\r\n          \r\n          </button>\r\n          <div className=\"errorWeather\">\r\n            {this.props.error ? error() : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction error() {\r\n  return \"Please enter city! 🐸\";\r\n}\r\n\r\nexport default Search;\r\n\r\n","C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\CardContainer.js",[],"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Filter.js",["58"],"import React, {useState} from \"react\";\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as BiIcons from \"react-icons/bi\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport \"./Filter.css\";\r\nimport { IconContext } from 'react-icons';\r\n\r\n  const Filter = () => {\r\n    return (\r\n      <Router>\r\n      <div className=\"filter\">\r\n      <IconContext.Provider value = {{color:'#9dcc3a'}}>\r\n        <div className='categories'>\r\n        <p className='titleFilter'>CATEGORIES</p>\r\n        <ul className='choices'> \r\n        <li><input type=\"checkbox\"></input>Adult\r\n        <Link className='iconCategories'>\r\n            <AiIcons.AiFillHome/>\r\n        </Link>\r\n        </li>\r\n        <li><input type=\"checkbox\"></input>Religious Places\r\n        <Link className='iconCategories' >\r\n            <BiIcons.BiChurch/>\r\n        </Link>\r\n        </li>\r\n        <li><input type=\"checkbox\"></input>Shopping\r\n        <Link className='iconCategories'>\r\n            <AiIcons.AiFillShopping/>\r\n        </Link>\r\n        </li>\r\n        <li><input type=\"checkbox\"></input>Food\r\n        <Link className='iconCategories'>\r\n            <BiIcons.BiRestaurant/>\r\n        </Link>\r\n        </li>\r\n        <li><input type=\"checkbox\"></input>Sport\r\n        <Link className='iconCategories'>\r\n            <BiIcons.BiRun/>\r\n        </Link>\r\n        </li>\r\n        </ul>\r\n        </div>\r\n        </IconContext.Provider>\r\n      </div>\r\n      </Router>\r\n    );\r\n  }\r\n\r\n\r\n\r\nexport default Filter;\r\n",["59","60"],"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Picker.js",[],"C:\\Users\\chris\\Documents\\Projet2\\remote-js-202011-froggy-devs\\src\\components\\Weather.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":15},{"ruleId":"65","severity":1,"message":"69","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":18},{"ruleId":"65","severity":1,"message":"70","line":12,"column":16,"nodeType":"67","messageId":"68","endLine":12,"endColumn":23},{"ruleId":"65","severity":1,"message":"71","line":11,"column":12,"nodeType":"67","messageId":"68","endLine":11,"endColumn":19},{"ruleId":"65","severity":1,"message":"72","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"73","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":13},{"ruleId":"65","severity":1,"message":"74","line":6,"column":8,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"65","severity":1,"message":"75","line":43,"column":11,"nodeType":"67","messageId":"68","endLine":43,"endColumn":15},{"ruleId":"65","severity":1,"message":"72","line":1,"column":16,"nodeType":"67","messageId":"68","endLine":1,"endColumn":24},{"ruleId":"61","replacedBy":"76"},{"ruleId":"63","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Weather' is defined but never used.","Identifier","unusedVar","'Weatherbis' is defined but never used.","'setRain' is assigned a value but never used.","'loading' is assigned a value but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'Picker' is defined but never used.","'city' is assigned a value but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation"]